const express = require('express');
const router = express.Router();
const connection = require('../db'); // Importer la connexion à la base de données

// Route pour récupérer les données de planning
router.get('/planning-data', (req, res) => {
    const { semaine, annee } = req.query;

    console.log(`Récupération des données pour la semaine ${semaine} de l'année ${annee}`);

    const query = `
        SELECT h.horaire_debut, h.horaire_fin, c.competence, c.competence_id, j.jour_id, j.jour, n.nom
        FROM Tcompetence_nom cn
        JOIN Tcompetence c ON cn.competence_id = c.competence_id
        JOIN Thoraire_competence hc ON c.competence_id = hc.competence_id
        JOIN Thoraire h ON hc.horaire_id = h.horaire_id
        LEFT JOIN Tplanning p ON c.competence_id = p.competence_id AND h.horaire_id = p.horaire_id AND p.semaine = ? AND p.annee = ?
        LEFT JOIN Tnom n ON p.nom_id = n.nom_id
        LEFT JOIN Tjour j ON p.jour_id = j.jour_id
        ORDER BY c.competence, h.horaire_debut, j.jour_id
    `;

    connection.query(query, [semaine, annee], (err, results) => {
        if (err) {
            console.error('Erreur lors de la récupération des données du planning :', err.message);
            res.status(500).send('Erreur lors de la récupération des données du planning');
        } else {
            res.json(results);
        }
    });
});

// Route pour récupérer les noms des personnes ayant la même competence_id
router.get('/nom-ids', (req, res) => {
    const { competence_id } = req.query;
    const query = `
        SELECT n.nom
        FROM Tcompetence_nom cn
        JOIN Tnom n ON cn.nom_id = n.nom_id
        WHERE cn.competence_id = ?
    `;

    connection.query(query, [competence_id], (err, results) => {
        if (err) {
            console.error('Erreur lors de la requête :', err.message);
            res.status(500).send('Erreur lors de la requête');
        } else {
            res.json(results.map(row => row.nom));
        }
    });
});

// Route pour insérer ou mettre à jour le planning
router.post('/update-planning', (req, res) => {
    const { semaine, annee, jour_id, horaire_debut, horaire_fin, competence_id, nom } = req.body;

    const selectQuery = `
        SELECT p.planning_id
        FROM Tplanning p
        JOIN Thoraire h ON p.horaire_id = h.horaire_id
        JOIN Tcompetence c ON p.competence_id = c.competence_id
        WHERE p.semaine = ? AND p.annee = ? AND p.jour_id = ? AND h.horaire_debut = ? AND h.horaire_fin = ? AND c.competence_id = ?
    `;

    connection.query(selectQuery, [semaine, annee, jour_id, horaire_debut, horaire_fin, competence_id], (err, results) => {
        if (err) {
            console.error('Erreur lors de la requête de sélection :', err.message);
            res.status(500).send('Erreur lors de la requête de sélection');
        } else if (results.length > 0) {
            // Mettre à jour la ligne existante
            const updateQuery = `
                UPDATE Tplanning
                SET nom_id = (SELECT nom_id FROM Tnom WHERE nom = ? LIMIT 1)
                WHERE planning_id = ?
            `;
            connection.query(updateQuery, [nom, results[0].planning_id], (err, result) => {
                if (err) {
                    console.error('Erreur lors de la mise à jour du planning :', err.message);
                    res.status(500).send('Erreur lors de la mise à jour du planning');
                } else {
                    res.send('Planning mis à jour avec succès');
                }
            });
        } else {
            // Insérer une nouvelle ligne
            const insertQuery = `
                INSERT INTO Tplanning (semaine, annee, jour_id, horaire_id, competence_id, nom_id)
                VALUES (?, ?, ?, (SELECT horaire_id FROM Thoraire WHERE horaire_debut = ? AND horaire_fin = ? LIMIT 1), ?, (SELECT nom_id FROM Tnom WHERE nom = ? LIMIT 1))
            `;
            connection.query(insertQuery, [semaine, annee, jour_id, horaire_debut, horaire_fin, competence_id, nom], (err, result) => {
                if (err) {
                    console.error('Erreur lors de l\'insertion dans le planning :', err.message);
                    res.status(500).send('Erreur lors de l\'insertion dans le planning');
                } else {
                    res.send('Planning inséré avec succès');
                }
            });
        }
    });
});

module.exports = router;